// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebAPI.Models.CountyModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("counties");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Győr-Moson-Sopron"
                        },
                        new
                        {
                            id = 2,
                            name = "Pest"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.LessonModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("studentId");

                    b.HasIndex("teacherId");

                    b.ToTable("lessons");

                    b.HasData(
                        new
                        {
                            id = 1,
                            date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            studentId = 1,
                            teacherId = 1
                        },
                        new
                        {
                            id = 2,
                            date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            studentId = 2,
                            teacherId = 1
                        },
                        new
                        {
                            id = 3,
                            date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            studentId = 3,
                            teacherId = 2
                        },
                        new
                        {
                            id = 4,
                            date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            studentId = 2,
                            teacherId = 2
                        },
                        new
                        {
                            id = 5,
                            date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            studentId = 3,
                            teacherId = 2
                        });
                });

            modelBuilder.Entity("WebAPI.Models.StudentModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.ToTable("students");

                    b.HasData(
                        new
                        {
                            id = 1,
                            email = "patrik@gmail.com",
                            name = "Magyar Patrik",
                            phoneNumber = "06201234567"
                        },
                        new
                        {
                            id = 2,
                            email = "zsombi@gmail.com",
                            name = "Novák Zsombor",
                            phoneNumber = "06301234567"
                        },
                        new
                        {
                            id = 3,
                            email = "jakab@gmail.com",
                            name = "Gipsz Jakab",
                            phoneNumber = "06701234567"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.TeacherModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("countyId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("grade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("isOnline")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.HasIndex("countyId");

                    b.ToTable("teachers");

                    b.HasData(
                        new
                        {
                            id = 1,
                            countyId = 1,
                            email = "bela@gmail.com",
                            grade = "8. osztály",
                            isOnline = false,
                            name = "Kis Béla",
                            phoneNumber = "06706666969",
                            price = 2000,
                            subject = "matek"
                        },
                        new
                        {
                            id = 2,
                            countyId = 2,
                            email = "anna@gmail.com",
                            grade = "9. osztály",
                            isOnline = false,
                            name = "Nagy Anna",
                            phoneNumber = "06304201234",
                            price = 3000,
                            subject = "matek"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.LessonModel", b =>
                {
                    b.HasOne("WebAPI.Models.StudentModel", "student")
                        .WithMany()
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.TeacherModel", "teacher")
                        .WithMany()
                        .HasForeignKey("teacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("WebAPI.Models.TeacherModel", b =>
                {
                    b.HasOne("WebAPI.Models.CountyModel", "county")
                        .WithMany()
                        .HasForeignKey("countyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("county");
                });
#pragma warning restore 612, 618
        }
    }
}
